REPLIT: make API stable (persist server changes)

Edit server/index.ts:

Insert (or keep) the Algolia-only route just before const server = await registerRoutes(app);:

// HARD SWITCH: /api/products -> Algolia-only (temporary; skips DB enrich)
app.get('/api/products', async (req: any, res: any) => {
  try {
    const q = typeof (req.query as any).q === 'string' ? (req.query as any).q : '';
    const limit = Number.parseInt(String((req.query as any).limit ?? '20'), 10) || 20;
    const r = await fetch(
      `https://${process.env.ALGOLIA_APP_ID}-dsn.algolia.net/1/indexes/products/query`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Algolia-API-Key': process.env.ALGOLIA_API_KEY || '',
          'X-Algolia-Application-Id': process.env.ALGOLIA_APP_ID || '',
          'Accept': 'application/json',
        },
        body: JSON.stringify({ params: `query=${encodeURIComponent(q)}&hitsPerPage=${limit}` }),
      }
    );
    const data = await r.json().catch(() => ({}));
    if (Array.isArray((data as any).hits)) return res.json((data as any).hits);
    return res.status(502).json({ message: 'Algolia query failed' });
  } catch {
    return res.status(500).json({ message: 'Algolia-only fallback failed' });
  }
});


Disable CommonJS routes (these crash under ESM). Comment out both the import and the app.use(...) lines for:

./routes/orderSnapshot.js or .ts

./routes/orderSummaryById.cjs

./routes/imageVerify.cjs

Example (keep the lines, just comment them):

// const { default: orderSnapshotRouter } = await import('./routes/orderSnapshot.js');
// app.use(orderSnapshotRouter);

// const { default: orderSummaryByIdRouter } = await import('./routes/orderSummaryById.cjs');
// app.use(orderSummaryByIdRouter);

// const imageVerifyRouter = await import('./routes/imageVerify.cjs');
// app.use(imageVerifyRouter.default);


Disable RSR cron at boot (prevents DB schema crashes). In:

server/routes.ts

server/routes/admin-rsr.ts

server/services/inventory-sync.ts

Comment these calls:

// await rsrSchedulerService.startScheduler();
// this.startScheduler();

Make no other changes. Save all files.